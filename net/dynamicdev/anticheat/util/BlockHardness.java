package net.dynamicdev.anticheat.util;

import org.bukkit.*;

public enum BlockHardness {
    STONE(1.5), 
    GRASS(0.6), 
    DIRT(0.5), 
    COBBLESTONE(2.0), 
    WOOD(2.0), 
    SAPLING(0.0), 
    WATER(100.0), 
    STATIONARY_WATER(100.0), 
    LAVA(0.0), 
    STATIONARY_LAVA(100.0), 
    SAND(0.5), 
    GRAVEL(0.6), 
    GOLD_ORE(3.0), 
    IRON_ORE(3.0), 
    COAL_ORE(3.0), 
    LOG(2.0), 
    LOG_2(2.0), 
    LEAVES(0.2), 
    LEAVES_2(0.2), 
    SPONGE(0.6), 
    GLASS(0.3), 
    LAPIS_ORE(3.0), 
    LAPIS_BLOCK(3.0), 
    DISPENSER(3.5), 
    DROPPER(3.5), 
    SANDSTONE(0.8), 
    NOTE_BLOCK(0.8), 
    BED(0.2), 
    RAILS(0.7), 
    DETECTOR_RAIL(0.7), 
    POWERED_RAIL(0.7), 
    ACTIVATOR_RAIL(0.7), 
    WEB(4.0), 
    LONG_GRASS(0.0), 
    DOUBLE_PLANT(0.0), 
    DEAD_BUSH(0.0), 
    WOOL(0.8), 
    YELLOW_FLOWER(0.0), 
    RED_ROSE(0.0), 
    BROWN_MUSHROOM(0.0), 
    RED_MUSHROOM(0.0), 
    GOLD_BLOCK(3.0), 
    IRON_BLOCK(5.0), 
    DOUBLE_STEP(2.0), 
    STEP(2.0), 
    BRICK(2.0), 
    TNT(0.0), 
    BOOKSHELF(1.5), 
    MOSSY_COBBLESTONE(2.0), 
    OBSIDIAN(50.0), 
    TORCH(0.0), 
    FIRE(0.0), 
    MOB_SPAWNER(5.0), 
    CHEST(2.5), 
    TRAPPED_CHEST(2.5), 
    REDSTONE_WIRE(0.0), 
    DIAMOND_ORE(3.0), 
    DIAMOND_BLOCK(5.0), 
    WORKBENCH(2.5), 
    SOIL(0.6), 
    FURNACE(3.5), 
    BURNING_FURNACE(3.5), 
    WOODEN_DOOR(3.0), 
    LADDER(0.4), 
    LEVER(0.5), 
    IRON_DOOR_BLOCK(5.0), 
    HOPPER(2.0), 
    STONE_PLATE(0.5), 
    WOOD_PLATE(0.5), 
    GOLD_PLATE(0.5), 
    IRON_PLATE(0.5), 
    QUARTZ_BLOCK(0.8), 
    QUARTZ_ORE(3.0), 
    REDSTONE_BLOCK(5.0), 
    REDSTONE_ORE(3.0), 
    GLOWING_REDSTONE_ORE(3.0), 
    REDSTONE_TORCH_OFF(0.0), 
    REDSTONE_TORCH_ON(0.0), 
    REDSTONE_COMPARATOR_OFF(0.0), 
    REDSTONE_COMPARATOR_ON(0.0), 
    DAYLIGHT_DETECTOR(0.2), 
    STONE_BUTTON(0.5), 
    SNOW(0.1), 
    ICE(0.5), 
    PACKED_ICE(0.5), 
    SNOW_BLOCK(0.2), 
    CACTUS(0.4), 
    CLAY(0.6), 
    HARD_CLAY(1.25), 
    STAINED_CLAY(1.25), 
    SUGAR_CANE_BLOCK(0.0), 
    JUKEBOX(2.0), 
    FENCE(2.0), 
    NETHERRACK(0.4), 
    SOUL_SAND(0.5), 
    GLOWSTONE(0.3), 
    PORTAL(-1.0), 
    CAKE_BLOCK(0.5), 
    LOCKED_CHEST(0.0), 
    TRAP_DOOR(3.0), 
    MONSTER_EGGS(0.75), 
    SMOOTH_BRICK(1.5), 
    IRON_FENCE(5.0), 
    THIN_GLASS(0.3), 
    STAINED_GLASS(0.3), 
    STAINED_GLASS_PANE(0.3), 
    PUMPKIN_STEM(0.0), 
    MELON_STEM(0.0), 
    VINE(0.2), 
    FENCE_GATE(2.0), 
    MYCEL(0.6), 
    WATER_LILY(0.0), 
    NETHER_BRICK(2.0), 
    NETHER_FENCE(2.0), 
    ENCHANTMENT_TABLE(5.0), 
    BREWING_STAND(0.5), 
    CAULDRON(2.0), 
    ENDER_PORTAL(-1.0), 
    ENDER_PORTAL_FRAME(-1.0), 
    DRAGON_EGG(3.0), 
    REDSTONE_LAMP_OFF(0.3), 
    REDSTONE_LAMP_ON(0.3), 
    WOOD_DOUBLE_STEP(2.0), 
    WOOD_STEP(2.0), 
    COCOA(0.2), 
    EMERALD_ORE(3.0), 
    ENDER_CHEST(22.5), 
    EMERALD_BLOCK(5.0), 
    FLOWER_POT(0.0), 
    WOOD_BUTTON(0.5), 
    ANVIL(5.0), 
    HUGE_MUSHROOM_1(0.2), 
    HUGE_MUSHROOM_2(0.2), 
    BED_BLOCK(0.2), 
    WOOD_STAIRS(2.0), 
    COBBLESTONE_STAIRS(2.0), 
    BRICK_STAIRS(2.0), 
    SMOOTH_STAIRS(1.5), 
    NETHER_BRICK_STAIRS(2.0), 
    SPRUCE_WOOD_STAIRS(2.0), 
    BIRCH_WOOD_STAIRS(2.0), 
    JUNGLE_WOOD_STAIRS(2.0), 
    DARK_OAK_STAIRS(2.0), 
    ACACIA_STAIRS(2.0), 
    QUARTZ_STAIRS(0.8), 
    SANDSTONE_STAIRS(0.8), 
    COMMAND(0.0), 
    BEACON(3.0), 
    COBBLE_WALL(2.0), 
    CROPS(0.0), 
    CARROT(0.0), 
    POTATO(0.0), 
    SKULL(1.0), 
    NETHER_WARTS(0.0), 
    SIGN_POST(1.0), 
    WALL_SIGN(1.0), 
    PUMPKIN(1.0), 
    JACK_O_LANTERN(1.0), 
    DIODE_BLOCK_ON(0.0), 
    DIODE_BLOCK_OFF(0.0), 
    MELON_BLOCK(1.0), 
    ENDER_STONE(3.0), 
    TRIPWIRE(0.0), 
    TRIPWIRE_HOOK(0.0), 
    HAY_BLOCK(0.5), 
    CARPET(0.1), 
    COAL_BLOCK(5.0), 
    PISTON_BASE(0.7), 
    PISTON_EXTENSION(0.7), 
    PISTON_MOVING_PIECE(0.7), 
    PISTON_STICKY_BASE(0.7);
    
    Material mat;
    double hardness;
    
    private BlockHardness(final double hard) {
        this.mat = Material.getMaterial(this.name());
        this.hardness = hard;
    }
    
    public static double getBlockHardness(final Material m) {
        final BlockHardness h = getHardness(m);
        return (h == null) ? 0.0 : h.hardness;
    }
    
    public static boolean hasBlockHardness(final Material m) {
        return getHardness(m) != null;
    }
    
    public static BlockHardness getHardness(final Material m) {
        for (final BlockHardness e : values()) {
            if (e.mat.equals((Object)m)) {
                return e;
            }
        }
        return null;
    }
}
